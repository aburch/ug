#!/bin/sh
if test "$1" = "-help"
then
	echo "usage: $0 [<ugmodule>] [makeoptions]";
	echo "purpose: compile by calling \"make\" with the right Makefile[.<ugmodule>]";
	echo "Options are";
	echo " <ugmodule>: the module which you want to compile";
	echo "             where <ugmodule> is one of ug, dev, meta, xif, gm";
	echo "             graph, low, numerics, ui, gg2, gg3, dom, std, netgen";
	echo "             diff2d, diff2da,cd, cda, fem, fema, ns2d, ns2da, simple";
	echo "             tools";
	echo " <makeoptions>: the options which you want to pass to \"make\"";
	exit 1;
fi

if test "x$UGROOT" = "x"
then
	echo "$0: to use $0 set shell environment variable UGROOT!";
	exit 1;
fi

# if no parameter is specified make in current directory
if test $# -eq 0 
then
	if test `ls Makefile*|wc -l` -eq 1 
	then
		make -f `ls Makefile*`;
		exit 0;
	else
		echo "$0: Makefile not found or not unique!"; 
		exit 1;
	fi
fi

# if parameter are specified make the specified module
if test $# -ge 1 
then
	# check whether first  option is ug module 
	case $1 in
	ug)
		cd $UGROOT
		;;
	dev | dom | gm | graphics | low | numerics | parallel | ui)
		cd $UGROOT/$1
		;;
	meta | xif | ps | sif)
		cd $UGROOT/dev/$1
		;;
	std)
		cd $UGROOT/dom/$1
		;;
	gg2 | gg3)
		cd $UGROOT/gm/$1
		;;
	netgen)
		cd $UGROOT/gm/gg3/$1
		;;
	uggraph | grape)
		cd $UGROOT/graphics/$1
		;;
	dddif)
		cd $UGROOT/parallel/$1
		;;
	simple)
		cd $UGROOT/../simple;
		;;
	diff2d)
		cd $UGROOT/../diff2d/pclib;
		;;
	diff2da)
		cd $UGROOT/../diff2d/appl;
		;;
	ns2d)
		cd $UGROOT/../ns2d/pclib;
		;;
	ns2da)
		cd $UGROOT/../ns2d/appl;
		;;
	cd)
		cd $UGROOT/../cd/pclib;
		;;
	cda)
		cd $UGROOT/../cd/appl;
		;;
	fem)
		cd $UGROOT/../fem/pclib;
		;;
	fema)
		cd $UGROOT/../fem/appl;
		;;
	tools)
		cd $UGROOT/tools;
		;;
	*)
		echo "target $1 not found";
		exit 1;
		;;
	esac;

	# call make with the right makefile
	if test `ls Makefile*|wc -l` -eq 1 
	then
		shift;
		make -f `ls Makefile*` $*;
		exit $?;
	else
		echo "$0: Makefile not found or not unique in $PWD!"; 
		exit 1;
	fi
fi

exit 0;
