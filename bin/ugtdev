#!/bin/csh -f

#set verbose
set ToolName = $0;


if ( $1 == "-h" || $1 == "-help" ) then
echo $ToolName " [-S[a|m|g|h]] [-G] [-k] <film-name>"; exit;
endif


##################################################################

# default settings
set timescale = 1;
set Screen = 0;
set Keep = 0;


##################################################################


# process list of options in variable order

set ready = 0;
while ($ready == 0)

	# process one option
	switch ($1)
		case "-Sa":
			set timescale = 31536000;
			breaksw;

		case "-Sm":
			set timescale = 2592000;
			breaksw;

		case "-Sg":
			set timescale = 86400;
			breaksw;

		case "-Sh":
			set timescale = 3600;
			breaksw;

		case "-G":
			set Screen = 1;
			breaksw;

		case "-k":
			set Keep = 1;
			breaksw;
		
		default:
			set ready = 1;
	endsw

	# eat option argument if it was interpreted
	if ($ready == 0) then
		shift;
	endif
end


##################################################################


rm -f t.gnu;
rm -f dt.gnu;
set PREFIX = $1

@ i = 0
while ($i <= 10000)

	set DataFileSuffix = `echo $i | awk '{printf("%04d.ug.data.bin",$1);}' - `
	set DataFile = $PREFIX.$DataFileSuffix
	if (! -f $DataFile ) break;

	echo "extracting data from file" $DataFile
	ugmgs $DataFile | \
		awk '$1=="Time:"     {print awk_i,$2/(ts+0);i++;}' \
			ts=$timescale awk_i=$i  - >> t.gnu

	ugmgs $DataFile | \
		awk '$1=="TimeStep:" {print awk_i,$2/(ts+0);i++;}' \
			ts=$timescale awk_i=$i  - >> dt.gnu
	@ i = $i + 1
end


if (! -f t.gnu) then
	echo $ToolName": couldn't extract 'Time' data."
	exit;
endif

if (! -f dt.gnu) then
	echo $ToolName": couldn't extract 'TimeStep' data."
	exit;
endif


##################################################################


if ( $Screen == 0 ) then 
	echo '\
		set parametric; \
		set grid; \
		set terminal postscript; \
		set output "t.ps"; \
		plot "t.gnu" w l;'       > t.scr;

	echo '\
		set parametric; \
		set grid; \
		set terminal postscript; \
		set output "dt.ps"; \
		plot "dt.gnu" w l;'        > dt.scr;
endif


if ( $Screen == 1 ) then 
	echo '\
		set parametric; \
		set grid; \
		plot "t.gnu" w l; \
		pause -1; \
		set terminal postscript; \
		set output "t.ps";\
		plot "t.gnu" w l;'       > t.scr;

	echo '\
		set parametric; \
		set grid; \
		plot "dt.gnu" w l; \
		pause -1; \
		set terminal postscript; \
		set output "dt.ps"; \
		plot "dt.gnu" w l;'         > dt.scr;
endif


gnuplot "t.scr";   rm t.scr;
gnuplot "dt.scr";  rm dt.scr;


if ( $Keep == 0 ) then
	rm t.gnu;
	rm dt.gnu;
endif


##################################################################

