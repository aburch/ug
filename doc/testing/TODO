20040113:
*	1. introduce cp into testboard for web page
*	2. switching compilers (Thimo)
*	3. integration of test into UG Makefile mechanism
*	4. distinction between not applicable (NA) tests and failed builds (NOTRUN)
*		-> may modifications in Dart/Source/Client/test.tcl  and Dart/Source/Server/Dashboard.xsl
*			are necessary
*	5. restructuring of BUILD TEST SUBMIT cycle
*		-> perform all possible builds + perform all possible test
*		-> this avoids 4.
*	6. script for EXPERIMENTAL builds and tests

20040126:
*	1. DONE
*	6. DONE
*	7. Copy of the SITES directory
*	8. Testen von binnew NIGHTLY and EXPERIMENTAL
*	9. im DartConfiguration.tcl: ConfigureCommand: ..../ugconf_dart
*	10. extensions for application testing
		- integration of testing into Makefiles: make test
		- target test inside Makefile:
			test:
				ugconf $UG_BUILD_OPTIONS
				ug_dart_conf.pl $APPL_DIRECTORY
		- application developer creates his own DartTestfile

20040202:
*	4. 10. avoids 4.
*	5. 10. avoids 5.
*	7. DONE
*	8. DONE
*	11. Copying of TestingResults/Javascript/ for Calendar
*	12. Wiring between  NIGHTLY and EXPERIMENTAL Dashboards
*	13. GCOV info NOT for PC

20040203:
*	11. DONE

20040208:
*	3. DONE
*	13. DONE

20040216:
*	9. DONE
*	10. DONE

20040218:
*	12. DONE
20040224:
	14. repair of calendar for all browsers
		status: - konqueror date jump does not work
				    month jump does not work
			- netscape6 month jump does not work

*	15. handling of DartTestfile for applications
*		new file in UG/ with name DartTestFiles
*		this allow to switch on and off application tests
20040310:
	16. Handling of ConfigureCommand output:
		- ConfigureCommand is defined in DartConfiguration.tcl
		- Configure.tcl provides Client-Side functionality
		- Configure.xsl provides Server-Side functionality
		--> web documents explaining tcl, xml, tsl easy and short
		--> Learn TCL, XSLT, XML as necessary
20040323:
	17. Management of all situations:
 		1. -e lib_all: build ug with all possible configurations
		2. -e test_all:
		3. -e all: all tests and all lib
		4. -e test -c <appl1:<testnames>>
		5. -e lib -c <lib:<testnames>>
	18. Extensions to multiple basis libs
		<CFS> = <LIB1:<CFS1>...<LIBN><CFSN>>


